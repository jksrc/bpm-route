<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>bpm-route</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <modules>
  <module>launch</module>
  </modules>
  <groupId>route</groupId>
  
  <properties>
		<start-class>com.zf.route.SpringStarter</start-class>
		<java-version>1.8</java-version>
		<service_name>TEST</service_name>
		<output-name>${project.artifactId}-${project.version}</output-name>
		<camunda-boot-version>2.0.0</camunda-boot-version>
		<camunda.verion>7.6.0</camunda.verion>
		<spring-boot.version>1.4.2.RELEASE</spring-boot.version>
		<spring.version>4.3.6.RELEASE</spring.version>
		<spring-cloud.version>Camden.M1</spring-cloud.version>
		<paho-version>1.1.0</paho-version>
		<camel.version>2.15.1</camel.version>
		<activemq-version>5.12.3</activemq-version>
		<jetty-version>9.2.17.v20160517</jetty-version>
		<iss-version>1.5.9</iss-version>
		<iss-astronic-version>${iss-version}</iss-astronic-version>
		<iss-framework-version>${iss-version}</iss-framework-version>
		<iss-config-version>${iss-version}</iss-config-version>
		<jdk.version>1.8</jdk.version>
		<h2.version>1.3.168</h2.version>
		<guava.version>21.0</guava.version>
		<jackson.version>2.8.4</jackson.version>
		<jersey.version>2.23.2</jersey.version>
	</properties>




	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.camunda.bpm.extension.springboot</groupId>
				<artifactId>camunda-bpm-spring-boot-starter-bom</artifactId>
				<version>${camunda-boot-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>


			<dependency>
				<groupId>org.camunda.bpm</groupId>
				<artifactId>camunda-bom</artifactId>
				<version>${camunda.verion}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>


			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>



			<!-- <dependency> <groupId>org.camunda.bpm.extension.springboot.project</groupId> 
				<artifactId>camunda-bpm-spring-boot-starter-extension-root</artifactId> <version>${camunda-boot-version}</version> 
				<scope>import</scope> </dependency> <dependency> <groupId>org.camunda.bpm.extension.springboot.project</groupId> 
				<artifactId>camunda-bpm-spring-boot-starter-root</artifactId> <version>${camunda-boot-version}</version> 
				<scope>import</scope> </dependency> -->

			<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-test</artifactId> 
				<scope>test</scope> <version>${spring-boot.version}</version> </dependency> 
				<dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-autoconfigure</artifactId> 
				<version>${spring-boot.version}</version> </dependency> <dependency> <groupId>org.springframework.boot</groupId> 
				<artifactId>spring-boot-starter-web</artifactId> <version>${spring-boot.version}</version> 
				</dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-jersey</artifactId> 
				<version>${spring-boot.version}</version> </dependency> -->


			<!-- <dependency> Import dependency management from Spring Boot <groupId>org.springframework.boot</groupId> 
				<artifactId>spring-boot-dependencies</artifactId> <version>${spring-boot.version}</version> 
				<scope>import</scope> <type>pom</type> </dependency> -->

			<!-- <dependency> Import dependency management from Spring Boot <groupId>org.springframework.boot</groupId> 
				<artifactId>spring-boot-dependencies</artifactId> <version>${spring-boot.version}</version> 
				<type>pom</type> <scope>import</scope> </dependency> -->
			<dependency>
				<groupId>org.camunda.bpm.webapp</groupId>
				<artifactId>camunda-webapp</artifactId>
				<classifier>classes</classifier>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-sse -->
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-sse</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>org.camunda.bpm</groupId>
				<artifactId>camunda-engine</artifactId>
			</dependency>

			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.9.3</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
				<version>4.5.2</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>fluent-hc</artifactId>
				<version>4.5.2</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>4.5.2</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpasyncclient</artifactId>
				<version>4.1.2</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.json/json -->
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>20160810</version>
			</dependency>



			<!-- https://mvnrepository.com/artifact/org.apache.activemq/activemq-camel -->
			<!-- <dependency> <groupId>org.apache.activemq</groupId> <artifactId>activemq-camel</artifactId> 
				<version>${activemq-version}</version> </dependency> -->
			<!-- https://mvnrepository.com/artifact/org.apache.activemq/activemq-core -->

			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-kahadb-store</artifactId>
				<version>${activemq-version}</version>
			</dependency>




			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-http</artifactId>
				<version>${activemq-version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-all</artifactId>
				<version>${activemq-version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-mqtt</artifactId>
				<version>${activemq-version}</version>
			</dependency>



			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-stream</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jms</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-camel</artifactId>
				<version>${activemq-version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-xstream</artifactId>
				<version>${camel.version}</version>
			</dependency>


			<dependency>
				<groupId>org.eclipse.jetty.aggregate</groupId>
				<artifactId>jetty-all</artifactId>
				<version>${jetty-version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>websocket-server</artifactId>
				<version>${jetty-version}</version>
				<!-- <version>9.3.14.v20161028</version> -->
			</dependency>


			<!-- https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-websocket -->
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-websocket</artifactId>
				<version>${jetty-version}</version>
			</dependency>



			<dependency>
				<groupId>javax.websocket</groupId>
				<artifactId>javax.websocket-api</artifactId>
				<version>1.0</version>
			</dependency>
			<!-- To run javax.websocket in embedded server -->
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>javax-websocket-server-impl</artifactId>
				<version>${jetty-version}</version>
			</dependency>
			<!-- To run javax.websocket client -->
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>javax-websocket-client-impl</artifactId>
				<version>${jetty-version}</version>
			</dependency>


			<dependency>
				<groupId>org.eclipse.paho</groupId>
				<artifactId>org.eclipse.paho.client.mqttv3</artifactId>
				<version>${paho-version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>


			<!-- https://mvnrepository.com/artifact/junit/junit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
			</dependency>


			<dependency>
				<groupId>com.zf.automation</groupId>
				<artifactId>ceconn</artifactId>
				<version>1.0.8</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.eclipse.persistence/eclipselink -->
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>eclipselink</artifactId>
				<version>2.5.0</version>
			</dependency>

			<dependency>
				<groupId>com.zf.automation.caa</groupId>
				<artifactId>picking-data</artifactId>
				<version>1.0.3</version>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>

			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>1.4.9</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jaxb</groupId>
				<artifactId>txw2</artifactId>
				<version>2.2.11</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>


			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-providers</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-base</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.9.5</version>
				<scope>test</scope>
			</dependency>


		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
		</plugins>
	</build>


  
  
  
</project>